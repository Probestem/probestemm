const renderProjectsTab = () => (
  <TabsContent value="projects">
    <motion.div
      className="space-y-8"
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
    >
      {/* Existing content... */}
      <Card className="border border-[#eb5e17] bg-white">
        <CardHeader>
          <CardTitle className="flex items-center text-2xl font-bold text-[#472014]">
            <Briefcase className="mr-2 text-[#eb5e17]" />
            My Projects
          </CardTitle>
        </CardHeader>
        <CardContent>
          {projects.length > 0 ? (
            <ul className="space-y-4">
              {projects.map((project) => (
                <li
                  key={project.id}
                  className="border-b border-[#eb5e17] pb-4 last:border-b-0"
                >
                  <div className="flex items-center justify-between mb-2">
                    <h4 className="text-lg font-semibold text-[#472014]">
                      {project.topic}
                    </h4>
                    <Badge
                      variant="secondary"
                      className="bg-[#686256] text-white"
                    >
                      {project.status}
                    </Badge>
                  </div>
                  <p className="text-sm text-[#686256] mb-2">
                    {project.content.substring(0, 100)}...
                  </p>
                  <div className="flex items-center space-x-4 text-sm text-[#472014]">
                    <div className="flex items-center">
                      <User className="mr-1 h-4 w-4" />
                      <span>{project.professor?.fullName}</span>
                    </div>
                  </div>
                  <Button
                    variant="outline"
                    size="sm"
                    className="mt-2"
                    onClick={() => toggleApplicants(project.id)}
                  >
                    {appliedApplicantsMap[project.id] ? "Hide" : "View"} Applicants
                  </Button>
                  {appliedApplicantsMap[project.id] && (
                    <div className="mt-4">
                      <h5 className="text-md font-semibold mb-2">Applicants:</h5>
                      {isLoadingApplicants[project.id] ? (
                        <Loader2 className="h-6 w-6 animate-spin text-[#eb5e17]" />
                      ) : appliedApplicantsMap[project.id].length > 0 ? (
                        <ul className="space-y-2">
                          {appliedApplicantsMap[project.id].map((applicant) => (
                            <li key={applicant.id} className="flex items-center space-x-4">
                              <div>
                                <p className="font-semibold">{applicant.name}</p>
                                <p className="text-sm text-gray-600">{applicant.email}</p>
                                <p className="text-sm text-gray-600">{applicant.phoneNumber}</p>
                                {/* Include other relevant details */}
                              </div>
                              {/* You can add buttons to accept/reject the application */}
                            </li>
                          ))}
                        </ul>
                      ) : (
                        <p>No applicants yet.</p>
                      )}
                    </div>
                  )}
                </li>
              ))}
            </ul>
          ) : (
            <p className="text-center text-[#686256]">
              No projects available.
            </p>
          )}
        </CardContent>
      </Card>
    </motion.div>
  </TabsContent>
);